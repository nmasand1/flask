import os
import requests
import boto3
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

AWS_USER = os.getenv("AWS_USER")
AWS_PASS = os.getenv("AWS_PASS")
REGION_NAME = os.getenv("REGION_NAME")
AWS_JWT_TOKEN_URL = os.getenv("AWS_JWT_TOKEN_URL")
AWS_SESSION_TOKEN_URL = os.getenv("AWS_SESSION_TOKEN_URL")
AWS_ROLE_ARN = os.getenv("AWS_ROLE_ARN")
BEDROCK_VPC_ENDPOINT = os.getenv("BEDROCK_VPC_ENDPOINT")
KNOWLEDGE_BASE_ID = os.getenv("KNOWLEDGE_BASE_ID")

def get_aws_credentials():
    """Authenticate with AWS and retrieve temporary credentials"""
    jwt_response = requests.post(
        AWS_JWT_TOKEN_URL,
        json={"username": AWS_USER, "password": AWS_PASS},
        headers={"content-type": "application/json", "accept": "*/*"},
        verify=False
    )
    
    jwt_response.raise_for_status()
    jwt_token = jwt_response.json()["token"]

    creds_response = requests.get(
        f"{AWS_SESSION_TOKEN_URL}{AWS_ROLE_ARN}",
        headers={"authorization": f"Bearer {jwt_token}"},
        verify=False
    )

    creds_response.raise_for_status()
    return creds_response.json()["Credentials"]

def connect_to_knowledge_base():
    """Connect to AWS Knowledge Base using retrieved credentials"""
    creds = get_aws_credentials()

    session = boto3.Session(
        aws_access_key_id=creds["AccessKeyId"],
        aws_secret_access_key=creds["SecretAccessKey"],
        aws_session_token=creds["SessionToken"],
        region_name=REGION_NAME
    )

    bedrock_agent = session.client("bedrock-agent-runtime", endpoint_url=BEDROCK_VPC_ENDPOINT)

    response = bedrock_agent.retrieve(
        knowledgeBaseId=KNOWLEDGE_BASE_ID,
        retrievalQuery={"text": "example query"}
    )

    return response

if __name__ == "__main__":
    response = connect_to_knowledge_base()
    print(response)
